# -*- coding: utf-8 -*-
"""lipreading.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_dZklPM6q_gi6wQyvMH8WpPGJWKAFiId
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/mpc001/Lipreading_using_Temporal_Convolutional_Networks
# %cd Lipreading_using_Temporal_Convolutional_Networks

!pip install -r requirements.txt

# no, it's not a tar file
!wget "https://drive.google.com/uc?export=dowload&id=1dT2e6fG46MEIev7XXYjsWSdQmjCvtgQe" -O lrw_snv2x05_tcn.pth
!ls -l

from lipreading.model import Lipreading
import torch

model = Lipreading(backbone_type='shufflenet',
                   width_mult=0.5,
                   tcn_options = {'kernel_size': [3], 'num_layers': 4, 'dropout': 0.2})
model.load_state_dict( torch.load("lrw_snv2x05_tcn.pth")["model_state_dict"], strict=False)
model.eval()

with torch.no_grad():
  dummy_input = torch.randn(24, 1, 5, 96, 96, device='cpu')
  torch.onnx.export(model, dummy_input, "lipreading.onnx", verbose=True, input_names=["input"], output_names=["output"])

			s!rm lipreading/__pycache__/*