# -*- coding: utf-8 -*-
"""XNect.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iCPFK6EQ8a0W0KuBZ5ubytVXzDzW1dj2
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/mehtadushy/SelecSLS-Pytorch
# %cd SelecSLS-Pytorch

!wget http://gvv.mpi-inf.mpg.de/projects/XNect/assets/models/SelecSLS60_statedict_better.pth

import torch, torch.nn as nn
#import torch.nn.functional as F
#torch.backends.cudnn.benchmark = True
#from util.imagenet_data_loader import get_data_loader
import importlib
import models

def convert_to_onnx(net, output_name):
    input = torch.randn(1, 3, 256, 320)
    input_names = ['data']
    output_names = ['output']
    net.eval()
    torch.onnx.export(net, input, output_name, verbose=True, input_names=input_names, output_names=output_names)


model_module = importlib.import_module('models.selecsls')
net = model_module.Net(nClasses=1000, config='SelecSLS60')
#net = models.Net(nClasses=1000, config='SelecSLS60')
net.load_state_dict(torch.load("/content/SelecSLS-Pytorch/SelecSLS60_statedict_better.pth", map_location= lambda storage, loc: storage))
net.prune_and_fuse(0.2)
convert_to_onnx(net, "selecSLS60.onnx")

import cv2
net = cv2.dnn.readNet("selecSLS60.onnx")

!cp "/content/drive/My Drive/cv2_cuda/cv2.cpython-36m-x86_64-linux-gnu.so" .